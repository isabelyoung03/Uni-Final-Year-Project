Week 1: This week I completed my project plan. I have also displayed my sprite on the GUI, as well as writing a function to display the maze. 
I need to work out how to separate and use the sprite sheet I have created.

Week 2: I have made a function to draw out the small maze based on the map for the small maze in the config file. I made a method for moving and tested this with the arrows keys.
I have started working on the menu page. I decided not to use a sprite sheet and use 4 individial sprites instead.

Week 3: I have completed the menu page. 
    11/10/2023: Today I completed the maps for the medium and large mazes. I have now finished the work I planned for this week.
                I am now going to begin next weeks work: depth and breadth first search.
                I have completed depth first search.

Week 4: 
    16/10/2023: Today I have started working on uniform-cost search. 
                I have prepared for this by creating a Ghost class and a factory class for it.
    18/10/2023: I have created an enum for ghost behaviour, and created a random movement behaviour to be used in uniform-cost maze.
                I have made it so that the path to the goal for uniform-cost is only recalculated if any of the ghosts move position.
                I just completed uniform-cost search for when the ghosts in the maze are static. The player avoids paths with ghosts in.
    19/10/2023: I have now completed uniform-cost search and starting on adding pause/play/replay buttons to maze screens.

Week 5: 
    25/10/2023: Today I have begun working on A* search. This is taking a lot of setup because it needs a special controller
                becaues it differs so much to the other algorithms I have implemented so far, because it has multiple goals to achieve
                and also requires options to change which heuristic it uses.
Week 6:
    30/10/2023: I have created a new Node class to be used in A* search. I am continuing with A* search, and having problems with the program crashing.
                I have made changes to the A* world controller as A* search will not have opponents.
    1/10/2023: Today I added the 2nd heuristic for A* search: Euclidian distance

Week 7:
    7/11/2023: I am still a week ahead of where I planned to be at this point.
                I have completed A* search where there is a cupcake in every cell of the maze.
                I am trying to find ways to optimise this and find the best possible route.
    8/11/2023: Today I improved the A* search algorithm by choosing the closest goal to go to next, reducing steps required

Week 8:
    15/11/2023: This week I am putting programming on hold for a bit to focus on my interim report and presentation.
    17/11/2023: I am adding in tests for the classes that I use. I have spent a long time today trying to deal with an issue
                with imports and python not being able to import any of my code into the test folder I made.
                I have been unable to resolve this problem so I have decided to leave all test files in the main directory
                instead of in a folder called "tests" because this is the only way they work.
                Update: I appear to have fixed this issue now. I need to run "python -m unittest tests.test_goal" from the root 
                folder to run a test
                I have written tests for ghost, goal, player and heuristic classes.

Week 9: 
    21/11/2023: I am continuing with writing my iterim report. I have created a requirements.txt file and updated README

Week 10:
    1/12/2023: I have started writing the code for Greedy search. I have updated my menu page.

Week 11:
    5/12/2023: I am continuing with greedy search.
    6/12/2023: I finished greedy search and am starting the model player as a reflex agent task.
                To prepare, I have made it so that the maze stops and a message is displayed if the player loses.

----------Term 2:-------------
Week 1: This week I have completed the reflex agent and begun working on making the Minimax world controller.

Week 2: 
    25/01/2024: I have been struggling with the minimax algorithm. I have written the algorithm and evaluate functions
                but it is not performing as I expected

    26/01/2024: Still struggling with the minimax algorithm. Trying having just one evaluate function for ghost and player.
                I think the problem might be caused by the depth, I am not sure if it is actually locating the goal at all
                due to the depth, but if I increase the depth too much it makes the algorithm so slow.
Week 3: 
    30/01/2024: I have complete minimax for one opponent.
    31/01/2024: I have completed minimax for multiple opponents. I am also working on updating my UML diagram,
                and starting the professional issues part of my report.
    1/02/2024: Today I am starting to work on minimax with alpha-beta pruning. I have made a button on the minimax
    page to toggle pruning on or off.

Week 4:
    06/02/2024: Today I am implementing Alpha-Beta pruning. So far it has sped up the algorithm, so now I can adjust the depths
                of the algorithm to allow for more effective searching within a reasonable amount of time.
    07/02/2024: I have worked on creating an analysis option for the depth and breadth first mazes. This imagines a goal in every cell          
                of the maze and sees how many moves it takes each algorithm to achieve the goal. These results are then put in a CSV file.
    08/02/2024: I have made a property-based test for goal generation, and also a new test for the menu screen results.

Week 5:
    12/02/2024: I have fixed an issue I was having with the movements of the ghost opponents not being optimal.